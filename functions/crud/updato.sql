-- Procedure genérica para atualizar dados de qualquer tabela
CREATE OR REPLACE PROCEDURE ATUALIZAR_DADOS(
    TABELA TEXT, -- NOME DA TABELA
    CAMPO_IDENTIFICADOR TEXT, -- COLUNA DA CONDIÇÃO
    VALOR_IDENTIFICADOR TEXT, -- VALOR DA CONDIÇÃO
    CAMPO_ALVO TEXT, -- COLUNA A SER ATUALIZADA
    NOVO_VALOR TEXT -- NOVO VALOR DA COLUNA A SER ATUALIZADA
)
LANGUAGE PLPGSQL
AS $$
DECLARE
    SQL_COMANDO TEXT;
BEGIN
    SQL_COMANDO := FORMAT(
        'UPDATE %I SET %I = %L WHERE %I ILIKE %L',
        TABELA,
        CAMPO_ALVO,
        NOVO_VALOR,
        CAMPO_IDENTIFICADOR,
        VALOR_IDENTIFICADOR
    );

    EXECUTE SQL_COMANDO;
    RAISE NOTICE 'Atualização realizada com sucesso!';
END;
$$;

-- FUNÇÃO PARA ATUALIZAR CLIENTE
CREATE OR REPLACE FUNCTION ATUALIZAR_CLIENTE(
    NOME_CLIENTE TEXT,
    CAMPO TEXT,
    NOVO_VALOR TEXT
)
RETURNS VOID
LANGUAGE PLPGSQL
AS $$
BEGIN
    CALL ATUALIZAR_DADOS('cliente', 'nome', NOME_CLIENTE, CAMPO, NOVO_VALOR);
END;
$$;

-- FUNÇÃO PARA ATUALIZAR ATENDENTE
CREATE OR REPLACE FUNCTION ATUALIZAR_ATENDENTE(
    NOME_ATENDENTE TEXT,
    CAMPO TEXT,
    NOVO_VALOR TEXT
)
RETURNS VOID
LANGUAGE PLPGSQL
AS $$
BEGIN
    CALL ATUALIZAR_DADOS('atendente', 'nome', NOME_ATENDENTE, CAMPO, NOVO_VALOR);
END;
$$;

-- FUNÇÃO PARA ATUALIZAR ENTREGADOR
CREATE OR REPLACE FUNCTION ATUALIZAR_ENTREGADOR(
    NOME_ENTREGADOR TEXT,
    CAMPO TEXT,
    NOVO_VALOR TEXT
)
RETURNS VOID
LANGUAGE PLPGSQL
AS $$
BEGIN
    CALL ATUALIZAR_DADOS('entregador', 'nome', NOME_ENTREGADOR, CAMPO, NOVO_VALOR);
END;
$$;

-- FUNÇÃO PARA ATUALIZAR FORNECEDOR
CREATE OR REPLACE FUNCTION ATUALIZAR_FORNECEDOR(
    NOME_FORNECEDOR TEXT,
    CAMPO TEXT,
    NOVO_VALOR TEXT
)
RETURNS VOID
LANGUAGE PLPGSQL
AS $$
BEGIN
    CALL ATUALIZAR_DADOS('fornecedor', 'nome', NOME_FORNECEDOR, CAMPO, NOVO_VALOR);
END;
$$;

-- FUNÇÃO PARA ATUALIZAR PRODUTO
CREATE OR REPLACE FUNCTION ATUALIZAR_PRODUTO(
    NOME_PRODUTO TEXT,
    CAMPO TEXT,
    NOVO_VALOR TEXT
)
RETURNS VOID
LANGUAGE PLPGSQL
AS $$
BEGIN
    CALL ATUALIZAR_DADOS('produto', 'nome', NOME_PRODUTO, CAMPO, NOVO_VALOR);
END;
$$;

-- FUNÇÃO PARA ATUALIZAR INGREDIENTE
CREATE OR REPLACE FUNCTION ATUALIZAR_INGREDIENTE(
    NOME_INGREDIENTE TEXT,
    CAMPO TEXT,
    NOVO_VALOR TEXT
)
RETURNS VOID
LANGUAGE PLPGSQL
AS $$
BEGIN
    CALL ATUALIZAR_DADOS('ingrediente', 'nome', NOME_INGREDIENTE, CAMPO, NOVO_VALOR);
END;
$$;

-- FUNÇÃO PARA ATUALIZAR TIPO DE PAGAMENTO
CREATE OR REPLACE FUNCTION ATUALIZAR_TIPO_PAGAMENTO(
    NOME_TIPO_PAGAMENTO TEXT,
    CAMPO TEXT,
    NOVO_VALOR TEXT
)
RETURNS VOID
LANGUAGE PLPGSQL
AS $$
BEGIN
    CALL ATUALIZAR_DADOS('tipo_pagamento', 'nome', NOME_TIPO_PAGAMENTO, CAMPO, NOVO_VALOR);
END;
$$;